{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactsForm/ContactsForm.module.css","Components/ContactsList/ContactsList.module.css","Components/ContactsList/ContactsList.js","Components/ContactsForm/ContactsForm.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactsList","contacts","onDeleteContact","className","styles","list","map","id","name","number","item","type","btn","onClick","ContactsForm","state","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onAddContact","form","label","pattern","title","input","this","onChange","required","Component","Filter","onchange","App","filter","addContact","some","contact","alert","shortid","generate","prevState","deleteContact","contactId","changeFilter","totalContactsCount","length","normalizedFilter","toLocaleLowerCase","visibleContacts","includes","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df421c79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1ktXN\",\"btn\":\"Filter_btn__1ASAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__1Uiii\",\"label\":\"ContactsForm_label__2y6eY\",\"input\":\"ContactsForm_input__26tmQ\",\"btn\":\"ContactsForm_btn__2ORhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3rjLF\",\"item\":\"ContactsList_item__1dlHU\",\"name\":\"ContactsList_name__2uFKn\",\"btn\":\"ContactsList_btn__3pR_G\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n            <li key={id} className={styles.item}>\r\n                <p className={styles.name}>{name} <span>{number}</span></p>\r\n                <button type=\"button\" className={styles.btn} onClick={() => onDeleteContact(id)}>Delete</button>\r\n            </li>\r\n        )\r\n        )}\r\n    </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n    id: PropTypes.any,\r\n    name: PropTypes.string,\r\n    number:PropTypes.string,\r\n}\r\n\r\nexport default ContactsList;\r\n","import React ,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsForm.module.css';\r\n\r\nclass ContactsForm extends Component{\r\n    static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.number,\r\n    };\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.currentTarget.name]: event.currentTarget.value })\r\n    }\r\n    \r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onAddContact(this.state.name, this.state.number);\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={styles.form}>\r\n                <label className={styles.label}>Name:\r\n                    <input type=\"text\" name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        className ={styles.input}\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        required \r\n                    />\r\n                </label>\r\n                <label className={styles.label}>Number:\r\n                    <input type=\"tel\" name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    className={styles.input} value={this.state.number} onChange={this.handleChange} required />\r\n                </label>\r\n                <button type=\"button\" className={styles.btn} onClick={this.handleSubmit}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n    }\r\n\r\nexport default ContactsForm;\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onchange }) => (\r\n    <label className={styles.label}>Find contacts by name\r\n        <input className={styles.input} type=\"text\" value={value} onChange={onchange} />\r\n    </label>\r\n\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nexport default Filter;\r\n\r\n","import React, { Component } from \"react\";\nimport shortid from 'shortid';\nimport PropTypes, { shape } from 'prop-types';\nimport './App.css';\n\nimport ContactsList from \"./Components/ContactsList\";\nimport ContactsForm from \"./Components/ContactsForm/ContactsForm\";\nimport Filter from \"./Components/Filter\";\n\n\nclass App extends Component {\n    static defaultProps = {\n        totalContactsCount: null,\n        visibleContacts: null,\n    }\n    static propTypes = {\n        contacts: PropTypes.arrayOf(\n            PropTypes, shape(\n                {\n                    id: PropTypes.any.isRequired,\n                    name: PropTypes.string.isRequired,\n                    number: PropTypes.string.isRequired,\n                }\n            )\n        ),\n        filter: PropTypes.string,\n        totalContactsCount: PropTypes.number,\n        visibleContacts: PropTypes.number,\n    };\n    state = {\n        contacts:\n            [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },],\n        filter: '',\n    };\n    addContact = (name, number) => {\n        const isInContacts = this.state.contacts.some(contact => contact.name === name)\n\n        if (isInContacts) { alert(`${name} is already in contacts.`); return }\n        \n        if (name && number) {\n            const contact = {\n                id: shortid.generate(),\n                name,\n                number,\n            };\n            this.setState(prevState => ({\n                contacts: [contact, ...prevState.contacts],\n            }));\n        }\n    };\n    deleteContact = (contactId => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n        }))\n    });\n\n    changeFilter = event => {\n        this.setState({ filter: event.currentTarget.value })\n    }\n\n    render() {\n        const { contacts, filter } = this.state;\n        const totalContactsCount = contacts.length;\n\n        const normalizedFilter = this.state.filter.toLocaleLowerCase();\n        const visibleContacts = this.state.contacts.filter(contact => contact.name.toLocaleLowerCase().includes(normalizedFilter),);\n    return (<div className=\"App\">\n            <h1>Phonebook</h1>\n            <ContactsForm contacts={contacts} onAddContact={this.addContact} />\n            \n            <h2>Contacts(total: {totalContactsCount})</h2>\n            <Filter value={filter} onchange={this.changeFilter} />\n            <ContactsList contacts={visibleContacts} onDeleteContact={this.deleteContact} />\n        </div>\n        );\n    }\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}